https://code.visualstudio.com/   > Install
https://nodejs.org/en > Install
https://git-scm.com/downloads > Install
https://www.postman.com/downloads/ > Install
https://github.com/   > Create Account
https://github.com/Aakashdeveloper > Follow

//extension
> TabNine
> Vscode-icons
> githistory
> gitlens
> code spell checker


//Prerequest
HTML
CSS
Basic JavaScript
(ifelse,function,loop, array,object,variable)


Npm
React = 4
Mock API> Dummy Api
json-server
React_hooks -1
loginapp
React-GraphQL-1
Github
Deployment
-> MERN
-> Netlify
-> ReactPy
-> Nginx
Testing Jest Enzime
/////////////////////////
-> Aws
-> Docker
HOC

React-Redux =1
Basic React Native=1
///////Walkthrough///////
React-Saga -1

--------NOT Backend--------------
API
> GraphQL
> Login/Logout
> Zomato


NPM
> Node Package manager
(Registory)

> Open Source
(Any Body can contribute)
* Packages

////////
JSON
Json web token
[
    {
        "name":"John",
        "city":"Amsterdam"
    },
    {
        "name":"John",
        "city":"Amsterdam"
    }
]
///////
package.json
> Entry point to the app
> command (start,build,test)
> contains meta data(name,version,decription)
> packages required for app

///Step to generate package.json
**NodeJs must be installed
> open cmd/terminal and go inside the folder
> npm init
> answer all question
> type "yes"

///Step to install package
**NodeJs must be installed
> open cmd/terminal and go inside the folder
> npm i packagename / npm install packagename

package-lock > Dependecy tree
.gitignore > Avoid pushing to git


////////////////////////////////////////
local
> Local to the folder
> Can only be used inside one application
> npm i packagename
dev
> Local to the folder 
> Can only be used inside one application
> Only those dependency which are required at the time of development
like testing
> npm i packagename --save-dev

global
> Local to laptop
> will not added in packages.json
> can only be use to start run thing outside the app
> Admin access to install

/////Step to install global dependency
# Win
> open cmd as admin
> npm i -g packagename

# Mac/linux
> open terminal
> sudo npm i -g packagename


////Step to generate react app
# One Time Step
> open cmd as admin
> npm i -g create-react-app

# Every time we need new app
> Open cmd
> go inside folder where we want app
> create-react-app appname

# One Step
> npx create-react-app appname


https://medium.com/techmagic/reactjs-vs-angular5-vs-vue-js-what-to-choose-in-2018-b91e028fa91d

React > Main package of the application
React-Script > Help to run the application
React-DOM > To render the content


//
es5
es6
Ecma Script

//es5
function add(a,b){
    return a+b
}

add(1,2)
3

//es6
const add =(a,b) => {return a+b}
add(2,3)
5



function add(a,b){
    let out = [a,b]
    return out
}

add(1,2)
[1,2]

/////////
Class Component
> Heavy as compare to functional
> Can maintain state and have lifecycle
> Logical Component

Functional Component
> Dumb component
> Only use for display purpose



Functional Component with hooks
> All this which class and
functional component can do


State
> Act like a local variable
> Every component can have its own state
> Any data interaction will happen through state
> Every time state update component will rerender

Props
> help to transfer data between parent and child
> We do not use it as a variable


function add(test1,test2){
    return test1+test2
}


var a = [1,2,3,4]

a.map((data) => {
    return data*2
})

parent > child (props)
child > parent (props with call back)


parent
function add(a,b){
    return a+b
}

child
add(1,2)



var a = [1,2,3,4]


a.filter((data) => {
    return data>2
})

var a = ["Delhi","Venice","Amsterdam","Innsburg"]

a.indexOf('Amsterdam')
2
a.indexOf('Mumbai')
-1
a.indexOf('Delhi')
0
a.indexOf('Boston')
-1


params
> What you pass after /
> we need to define in the routing
> if define then complousry to pass

queryParams
> What we pass after ?
> No need to define
> no complousory to pass


//routing5
history > Redireaction
location > QueryParams
match > Params


var a = "?page=1"
undefined
a.split('=')
(2) ['?page', '1']
a.split('=')[1]
'1'
"?page=1&test=9"
'?page=1&test=9'
var b = "?page=1&test=9"
undefined
b.split('&')
(2) ['?page=1', 'test=9']
b.split('&')[1].split('=')
(2) ['test', '9']
b.split('&')[1].split('=')[1]
'9'

npm i react-router-dom@5.3.0


//routin6
npm i react-router-dom


useState > To maintain and define the state
useEffect > To call api


(get) cityname >           http://3.17.216.66:4000/location
(get) restwrtcity >        http://3.17.216.66:4000/restaurant?stateId=1
(get) quickSearch>         http://3.17.216.66:4000/quicksearch

(get) onbasisofMeal >      http://3.17.216.66:4000/restaurant?mealtype_id=
(get) cuisinefilter >      http://3.17.216.66:4000/filter/4?cuisine=1
(get) costfilter >         http://3.17.216.66:4000/filter/1?hcost=1000&lcost=500

(get) restdetails >        http://3.17.216.66:4000/details/1
(get) menu >               http://3.17.216.66:4000/menu/1

(post) orderspage >        http://3.17.216.66:4000/menuItem
                           body [1,4,5]
(post)placeOrder >        

(get) allorder>            
       
(get) restaurants>         http://3.17.216.66:4000/restaurants


//es5
var a = 10
var b = "my age is "+a
"my age is 10"

//es6
var a = 10
var b = `my age is ${a}`
"my age is 10"


var a =  [34, 32, 33, 30, 33]
undefined
a.indexOf(33)
2
a.splice(2,1)
[33]
a
(4) [34, 32, 30, 33]
a.indexOf(33)
3
a.splice(3,1)
[33]
a
(3) [34, 32, 30]



# GetAllUser
* (GET)> http://3.17.216.66:5000/api/auth/users

# Register
* (POST)> http://3.17.216.66:5000/api/auth/register (body) => {"name":"Aakash","email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

# Login
* (POST) => http://3.17.216.66:5000/api/auth/login (body) => {"email":"aa@gmail.com","password":"12345678"} (response)=> {auth:true,token:'dgsdg'}

# UserInfo (GET) => http://3.17.216.66:5000/api/auth/userinfo
* (Header) => {'x-access-token':'token value from login'}



///dummy api
install global package 
npm i -g json-server


json-server --watch data.json --port 8199


make code build
> npm run build


https://app.netlify.com/


view > Display part
action > Any Api calling
reducer > take the previous state and an action return next state
store > centralized place that hold state